{"version":3,"sources":["components/Homepage/Homepage.module.css","components/ScoreBoard/ScoreBoard.module.css","components/PlayerButtons/PlayerButtons.module.css","components/Gamepage/Gamepage.module.css","components/PlayerInputs/PlayerInputs.module.css","components/GameBoard/GameBoard.module.css","components/Results/Results.module.css","components/PlayerButtons/PlayerButtons.js","components/PlayerInputs/PlayerInputs.js","components/Homepage/Homepage.js","components/ScoreBoard/ScoreBoard.js","components/Results/Results.js","components/GameBoard/GameBoard.js","components/Gamepage/Gamepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","PlayerButtons","props","className","classes","one","twoPlayer","active","join","onClick","handleClick","two","PlayerInputs","inputs","player1","name","placeholder","onChange","e","updateName","show","player2","Homepage","home","title","buttons","choices","handleButtonClick","playButton","play","startGame","ScoreBoard","scores","player1Container","turn","p1Name","p1Score","tieContainer","ties","player2Container","p2Name","p2Score","Results","container","banner","resultText","GameBoard","board","map","el","index","cell","key","data-position","placeMove","item","Gamepage","state","player1Score","player1Symbol","player2Score","player2Symbol","playerTurn","cellsFilled","gameOver","aiMoveInProgress","timer","componentWillUnmount","clearTimeout","newGameHandler","setState","winCombos","renderDraw","prevState","renderWin","player","player1Name","player2Name","field","emptyCells","filter","aiPlay","minimax","availableSpots","miniMaxCheckForWin","score","length","bestMove","moves","i","move","currentIndex","result","push","bestScore","value","target","textContent","position","getAttribute","boardCopy","currentPlayer","checkForWin","ai","setTimeout","aiMove","symbol","winner","this","forEach","subArr","counter","homeButton","endGame","buttonContainer","newGame","Component","App","gameStarted","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52792b96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Homepage_home__3sPPB\",\"title\":\"Homepage_title__13_fe\",\"buttons\":\"Homepage_buttons__3Psl7\",\"choices\":\"Homepage_choices__1JVa3\",\"playButton\":\"Homepage_playButton__5yhAF\",\"play\":\"Homepage_play__74NSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scores\":\"ScoreBoard_scores__1F4nl\",\"player1Container\":\"ScoreBoard_player1Container__3GEYX\",\"player2Container\":\"ScoreBoard_player2Container__SA4Me\",\"turn\":\"ScoreBoard_turn__37TXp\",\"tieContainer\":\"ScoreBoard_tieContainer__1MnzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one\":\"PlayerButtons_one__1K-6R\",\"two\":\"PlayerButtons_two__1bBNv\",\"active\":\"PlayerButtons_active__123fu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Gamepage_container__2XqhS\",\"homeButton\":\"Gamepage_homeButton__14DBZ\",\"buttonContainer\":\"Gamepage_buttonContainer__ISD5I\",\"newGame\":\"Gamepage_newGame__3sU6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"PlayerInputs_inputs__2NOUU\",\"player1\":\"PlayerInputs_player1__pmPlq\",\"player2\":\"PlayerInputs_player2__2Ua-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameBoard_container__1LHkW\",\"board\":\"GameBoard_board__1wcdm\",\"cell\":\"GameBoard_cell__2xgLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Results_container__a_P0-\",\"banner\":\"Results_banner__1j91e\"};","import React from 'react';\nimport classes from './PlayerButtons.module.css';\n\nfunction PlayerButtons(props) {\n  return (\n    <div>\n      <button\n        className={[classes.one, !props.twoPlayer ? classes.active : ''].join(' ')}\n        onClick={props.handleClick}\n      />\n      <button\n        className={[classes.two, props.twoPlayer ? classes.active : ''].join(' ')}\n        onClick={props.handleClick}\n      />\n    </div>\n  );\n}\n\nexport default PlayerButtons;\n","import React from 'react';\nimport classes from './PlayerInputs.module.css';\n\nfunction PlayerInputs(props) {\n  return (\n    <form>\n      <div className={classes.inputs}>\n        <div className={classes.player1}>\n          <span>✕</span>\n          <input\n            name='player1Name'\n            placeholder='Player 1 Name'\n            onChange={(e) => props.updateName(e)}\n          />\n        </div>\n        {props.show ? (\n          <div className={classes.player2}>\n            <span>O</span>\n            <input\n              name='player2Name'\n              placeholder='Player 2 Name'\n              onChange={(e) => props.updateName(e)}\n            />\n          </div>\n        ) : null}\n      </div>\n    </form>\n  );\n}\n\nexport default PlayerInputs;\n","import React from 'react';\nimport classes from './Homepage.module.css';\nimport PlayerButtons from '../PlayerButtons/PlayerButtons';\nimport PlayerInputs from '../PlayerInputs/PlayerInputs';\n\nfunction Homepage(props) {\n  return (\n    <div className={classes.home}>\n      <div className={classes.title}>Tic Tac Toe</div>\n      <div className={classes.buttons}>\n        <span className={classes.choices}>Players</span>\n        <PlayerButtons twoPlayer={props.twoPlayer} handleClick={props.handleButtonClick} />\n      </div>\n      <PlayerInputs show={props.twoPlayer} updateName={props.updateName} />\n      <div className={classes.playButton}>\n        <button className={classes.play} onClick={props.startGame}>\n          PLAY\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from 'react';\nimport classes from './ScoreBoard.module.css';\n\nfunction ScoreBoard(props) {\n  return (\n    <div className={classes.scores}>\n      <div\n        className={[classes.player1Container, props.turn === 'player1' ? classes.turn : ''].join(\n          ' '\n        )}\n      >\n        <div>{props.p1Name}</div>\n        <div>{props.p1Score}</div>\n      </div>\n      <div className={classes.tieContainer}>\n        <div>Ties</div>\n        <div>{props.ties}</div>\n      </div>\n      <div\n        className={[classes.player2Container, props.turn === 'player2' ? classes.turn : ''].join(\n          ' '\n        )}\n      >\n        <div>{props.p2Name}</div>\n        <div>{props.p2Score}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScoreBoard;\n","import React from 'react';\nimport classes from './Results.module.css';\n\nfunction Results(props) {\n  return (\n    <div className={classes.container}>\n      <div className={classes.banner}>{props.resultText}</div>\n    </div>\n  );\n}\n\nexport default Results;\n","import React from 'react';\nimport classes from './GameBoard.module.css';\n\nfunction GameBoard(props) {\n  const hasContents = (item) => {\n    return item === 'X' || item === 'O';\n  };\n  return (\n    <div className={classes.container}>\n      <div className={classes.board}>\n        {props.board.map((el, index) => {\n          return (\n            <div\n              className={classes.cell}\n              key={index}\n              data-position={index}\n              onClick={props.placeMove}\n            >\n              {hasContents(props.board[index]) ? props.board[index] : ''}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default GameBoard;\n","import React, { Component } from 'react';\nimport classes from './Gamepage.module.css';\nimport ScoreBoard from '../ScoreBoard/ScoreBoard';\nimport Results from '../Results/Results';\nimport GameBoard from '../GameBoard/GameBoard';\n\nclass Gamepage extends Component {\n  state = {\n    player1Score: 0,\n    player1Symbol: 'X',\n    player2Score: 0,\n    player2Symbol: 'O',\n    ties: 0,\n    playerTurn: 'player1',\n    board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n    cellsFilled: 0,\n    gameOver: false,\n    resultText: '',\n    aiMoveInProgress: false,\n  };\n\n  timer = null;\n\n  componentWillUnmount = () => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  };\n\n  newGameHandler = () => {\n    if (!this.state.aiMoveInProgress) {\n      this.setState({\n        gameOver: false,\n        board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n        cellsFilled: 0,\n        playerTurn: 'player1',\n        aiMoveInProgress: false,\n      });\n    }\n  };\n\n  winCombos = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  checkForWin(player) {\n    let symbol = player === 'player1' ? 'X' : 'O';\n    let winner = null;\n    this.winCombos.forEach((subArr) => {\n      let counter = 0;\n      subArr.forEach((index) => {\n        if (this.state.board[index] === symbol) {\n          counter++;\n        }\n      });\n      if (counter === 3) {\n        winner = player;\n        this.renderWin(winner);\n      }\n    });\n    if (this.state.cellsFilled === 9 && winner == null) {\n      this.renderDraw();\n    }\n  }\n\n  miniMaxCheckForWin(board, player) {\n    let result = false;\n    this.winCombos.forEach((subArr) => {\n      let counter = 0;\n      subArr.forEach((index) => {\n        if (board[index] === player) {\n          counter++;\n        }\n      });\n      if (counter === 3) {\n        result = true;\n      }\n    });\n    return result;\n  }\n\n  renderDraw = () => {\n    this.setState((prevState) => {\n      return {\n        gameOver: true,\n        playerTurn: 'player1',\n        ties: prevState.ties + 1,\n        resultText: \"It's a draw!\",\n      };\n    });\n  };\n\n  renderWin = (player) => {\n    let name = player === 'player1' ? this.props.player1Name : this.props.player2Name;\n    let field = player + 'Score';\n    this.setState((prevState) => {\n      return {\n        gameOver: true,\n        playerTurn: 'player1',\n        [field]: prevState[field] + 1,\n        resultText: `${name} wins!`,\n      };\n    });\n  };\n\n  emptyCells = (board) => {\n    return board.filter((cell) => cell !== 'X' && cell !== 'O');\n  };\n\n  aiPlay = (board, player) => this.minimax(board, player).index;\n\n  minimax = (board, player) => {\n    const human = 'X';\n    const ai = 'O';\n    let availableSpots = this.emptyCells(board);\n\n    if (this.miniMaxCheckForWin(board, ai)) {\n      return { score: 10 };\n    } else if (this.miniMaxCheckForWin(board, human)) {\n      return { score: -10 };\n    } else if (availableSpots.length === 0) {\n      return { score: 0 };\n    }\n\n    let moves = [];\n    for (let i = 0; i < availableSpots.length; i++) {\n      let move = {};\n      let currentIndex = availableSpots[i];\n      move.index = board[currentIndex];\n      board[currentIndex] = player;\n\n      if (player === ai) {\n        let result = this.minimax(board, human);\n        move.score = result.score;\n      } else {\n        let result = this.minimax(board, ai);\n        move.score = result.score;\n      }\n      board[currentIndex] = move.index;\n      moves.push(move);\n    }\n\n    let bestMove;\n    if (player === ai) {\n      let bestScore = -10000;\n      for (let i = 0; i < moves.length; i++) {\n        if (moves[i].score > bestScore) {\n          bestScore = moves[i].score;\n          bestMove = i;\n        }\n      }\n    } else {\n      let bestScore = 10000;\n      for (let i = 0; i < moves.length; i++) {\n        if (moves[i].score < bestScore) {\n          bestScore = moves[i].score;\n          bestMove = i;\n        }\n      }\n    }\n    return moves[bestMove];\n  };\n\n  placeMove = (e) => {\n    const value = e.target.textContent;\n    if (!this.state.aiMoveInProgress && !this.state.gameOver && value !== 'X' && value !== 'O') {\n      let position = e.target.getAttribute('data-position');\n      const boardCopy = [...this.state.board];\n      let currentPlayer = this.state.playerTurn;\n\n      boardCopy[position] = this.state.playerTurn === 'player1' ? 'X' : 'O';\n\n      this.setState(\n        (prevState) => {\n          return {\n            ...prevState,\n            board: boardCopy,\n            cellsFilled: prevState.cellsFilled + 1,\n            playerTurn: prevState.playerTurn === 'player1' ? 'player2' : 'player1',\n          };\n        },\n        () => {\n          this.checkForWin(currentPlayer);\n          if (this.props.ai && this.state.playerTurn === 'player2') {\n            this.setState({\n              aiMoveInProgress: true,\n            });\n            this.timer = setTimeout(this.aiMove, 1250);\n          }\n        }\n      );\n    }\n  };\n\n  aiMove = () => {\n    let position = this.aiPlay(this.state.board, 'O');\n    const boardCopy = [...this.state.board];\n    boardCopy[position] = 'O';\n    this.setState(\n      (prevState) => {\n        return {\n          ...prevState,\n          board: boardCopy,\n          cellsFilled: prevState.cellsFilled + 1,\n          playerTurn: prevState.playerTurn === 'player1' ? 'player2' : 'player1',\n        };\n      },\n      () => {\n        this.checkForWin('player2');\n        this.setState({\n          aiMoveInProgress: false,\n        });\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className={classes.container}>\n        <button className={classes.homeButton} onClick={this.props.endGame}>\n          ← Home\n        </button>\n        {this.state.gameOver ? (\n          <Results resultText={this.state.resultText} />\n        ) : (\n          <ScoreBoard\n            p1Name={this.props.player1Name}\n            p2Name={this.props.player2Name}\n            p1Score={this.state.player1Score}\n            p2Score={this.state.player2Score}\n            ties={this.state.ties}\n            turn={this.state.playerTurn}\n          />\n        )}\n        <GameBoard placeMove={this.placeMove} board={this.state.board} />\n        <div className={classes.buttonContainer}>\n          <button className={classes.newGame} onClick={this.newGameHandler}>\n            New Game\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gamepage;\n","import React, { Component } from 'react';\nimport './App.module.css';\nimport Homepage from '../Homepage/Homepage';\nimport Gamepage from '../Gamepage/Gamepage';\n\nclass App extends Component {\n  state = {\n    twoPlayer: false,\n    gameStarted: false,\n    player1Name: '',\n    player2Name: '',\n  };\n\n  handleButtonClick = () => {\n    this.setState({\n      twoPlayer: !this.state.twoPlayer,\n    });\n  };\n\n  startGame = () => {\n    this.setState({\n      player1Name: this.state.player1Name || 'Player1',\n      player2Name: !this.state.twoPlayer ? 'AI' : this.state.player2Name || 'Player2',\n      gameStarted: true,\n    });\n  };\n\n  updateName = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  endGame = () => {\n    this.setState({\n      gameStarted: false,\n      player1Name: '',\n      player2Name: '',\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.gameStarted ? (\n          <Gamepage\n            player1Name={this.state.player1Name}\n            player2Name={this.state.player2Name}\n            ai={!this.state.twoPlayer}\n            endGame={this.endGame}\n          />\n        ) : (\n          <Homepage\n            twoPlayer={this.state.twoPlayer}\n            handleButtonClick={this.handleButtonClick}\n            startGame={this.startGame}\n            updateName={this.updateName}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}